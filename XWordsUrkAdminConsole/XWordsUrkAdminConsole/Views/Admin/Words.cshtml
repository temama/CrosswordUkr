@model IEnumerable<XWordsUrkAdminConsole.Models.Word>

@{
    ViewBag.Title = "Words";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Words</h2>

<p>
    @Html.ActionLink("Create New", "Admin/Create")
</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Id)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.TheWord)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Definition)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Area)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Complexity)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.State)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.LastModified)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Id)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.TheWord)
        </td>
        <td>
            @Html.Raw(item.Definition)
        </td>
        <td>
            @Html.Raw(Enum.GetName(typeof(XWordsUrkAdminConsole.Models.WordArea), item.Area))
        </td>
        <td>
            @Html.Raw(Enum.GetName(typeof(XWordsUrkAdminConsole.Models.WordComplexity), item.Complexity))
        </td>
        <td>
            @Html.Raw(Enum.GetName(typeof(XWordsUrkAdminConsole.Models.WordArea), item.State))
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.LastModified)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.Id }) |
            @Html.ActionLink("Details", "Details", new { id=item.Id }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.Id })
        </td>
    </tr>
}

</table>
